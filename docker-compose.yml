# Run project
#
# http://localhost:5101
# https://localhost:5102

version: "3.5"

services:
  # Application
  laravel:
    container_name: laravel-container
    working_dir: ${WORKING_DIR}
    volumes:
      - ${PROJECT_PATH}:${WORKING_DIR}
#      - ${CONFIG_PATH}/laravel/xdebug.ini:/etc/php/7.3/mods-available/xdebug.ini
      - ${CONFIG_PATH}/laravel/php.ini:/usr/local/etc/php/php.ini
      - ${PROJECT_PATH}/logs/laravel:${WORKING_DIR}/storage/logs
      - ${PROJECT_PATH}/logs/php:/var/log/php
    ports:
      - ${APP_PORT}:8000
    networks:
      - laravel-network
    build:
      context: ${CONFIG_PATH}/laravel
      dockerfile: Dockerfile
      args:
        - USER_ID
        - GROUP_ID
        - TZ
        - PHP_VERSION
    environment:
      - TZ=${TZ}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_DRIVER=redis
      - REDIS_HOST=redis
      - PHP_VERSION=${PHP_VERSION}
      - XDEBUG_PORT=${XDEBUG_PORT}

  # The Web Server
  webserver:
    #image: nginx:1.15
    container_name: webserver-container
    working_dir: ${WORKING_DIR}
    volumes:
      - ${CONFIG_PATH}/nginx/cert:/etc/nginx/cert
      - ${PROJECT_PATH}:${WORKING_DIR}
      - ${PROJECT_PATH}/logs/nginx:/var/log/nginx
    ports: # (webserver_port:laravel_port)
      - ${HTTP_PORT}:80   # http port from laravel service
      - ${HTTPS_PORT}:443  # https port from laravel service
    networks:
      - laravel-network
    build:
      context: ${CONFIG_PATH}/nginx
      dockerfile: Dockerfile

  # The Database
  database:
    container_name: datebase-container
    image: mysql:5.7
    restart: unless-stopped
    tty: true
    volumes:
      - dbdata:/var/lib/mysql
      - ${CONFIG_PATH}/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ${PROJECT_PATH}/logs/mysql:/var/log/mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}
    ports:
      - ${DB_PORT}:3306
    networks:
        - laravel-network

  # Redis service
  redis:
    image: redis:latest
    container_name: redis-container
    volumes:
      - redis-store:/data
      - ${PROJECT_PATH}/logs/redis:/var/log/redis
    networks:
      - laravel-network

# Docker Networks
networks:
  laravel-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "192.168.220.0/24"

# Docker Volumes
volumes:
  dbdata: {}
  redis-store: {}
