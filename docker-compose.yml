version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}

services:
### Workspace Utilities ##################################
  workspace:
    container_name: ${APP_NAME}-workspace
    build:
      context: ${PATH_CONFIGS}/workspace
      dockerfile: Dockerfile
      args:
        - BASE_IMAGE_TAG_PREFIX=${WORKSPACE_BASE_IMAGE_TAG_PREFIX}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - TZ=${WORKSPACE_TIMEZONE}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - WORKSPACE_USER=${WORKSPACE_USER}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    volumes:
      - ${PATH_CONFIGS}/php-worker/supervisord.d:/etc/supervisord.d
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    networks:
      - frontend
      - backend

### PHP-FPM ##############################################
  php-fpm:
    container_name: ${APP_NAME}-php-fpm
    build:
      context: ${PATH_DOCKER}/php-fpm
      dockerfile: Dockerfile
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}
        - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
        - INSTALL_SMB=${PHP_FPM_INSTALL_SMB}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_CACHETOOL=${PHP_FPM_INSTALL_CACHETOOL}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}
        - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
        - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${PATH_DOCKER}/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${PATH_LOGS}/laravel:${APP_CODE_PATH_CONTAINER}/storage/logs
      - ${PATH_LOGS}/php:/var/log/php
      - ${PATH_LOGS}/xdebug:/var/log/xdebug
    expose:
      - "${NGINX_PHP_UPSTREAM_PORT}"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - FAKETIME=${PHP_FPM_FAKETIME}
    networks:
      - backend

### NGINX Server #########################################
  nginx:
    container_name: ${APP_NAME}-nginx
    build:
      context: ${PATH_DOCKER}/nginx
      dockerfile: Dockerfile
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${PATH_LOGS}/nginx:/var/log/nginx
      - ${PATH_CONFIGS}/nginx/sites:/etc/nginx/sites-available
      - ${PATH_CONFIGS}/nginx/ssl:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

### MySQL ################################################
  mysql:
    container_name: ${APP_NAME}-mysql
    build:
      context: ${PATH_DOCKER}/mysql
      dockerfile: Dockerfile
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ~/.docker_${APP_NAME}/mysql:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    depends_on:
      - php-fpm
    networks:
      - backend

### Redis ################################################
  redis:
    container_name: ${APP_NAME}-redis
    build:
      context: ${PATH_DOCKER}/redis
      dockerfile: Dockerfile
    volumes:
      - ~/.docker_${APP_NAME}/redis:/data
      - ${PATH_LOGS}/redis:/var/log/redis
    ports:
      - "${REDIS_PORT}:6379"
    depends_on:
      - php-fpm
    networks:
      - backend

### PHP Worker ############################################
  php-worker:
    container_name: ${APP_NAME}-php-worker
    build:
      context: ${PATH_DOCKER}/php-worker
      dockerfile: Dockerfile
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_BZ2=${PHP_WORKER_INSTALL_BZ2}
        - INSTALL_GD=${PHP_WORKER_INSTALL_GD}
        - INSTALL_IMAGEMAGICK=${PHP_WORKER_INSTALL_IMAGEMAGICK}
        - INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}
        - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
        - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}
        - INSTALL_OCI8=${PHP_WORKER_INSTALL_OCI8}
        - INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}
        - INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}
        - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}
        - INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}
        - INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}
        - INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}
        - INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}
        - INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}
        - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}
        - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}
        - INSTALL_IMAP=${PHP_WORKER_INSTALL_IMAP}
        - INSTALL_XMLRPC=${PHP_WORKER_INSTALL_XMLRPC}
        - PUID=${PHP_WORKER_PUID}
        - PGID=${PHP_WORKER_PGID}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${PATH_CONFIGS}/php-worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

### Laravel Horizon ############################################
  horizon:
    container_name: ${APP_NAME}-horizon
    build:
      context: ${PATH_DOCKER}/laravel-horizon
      dockerfile: Dockerfile
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_BZ2=${LARAVEL_HORIZON_INSTALL_BZ2}
        - INSTALL_GD=${LARAVEL_HORIZON_INSTALL_GD}
        - INSTALL_GMP=${LARAVEL_HORIZON_INSTALL_GMP}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_ZIP_ARCHIVE=${LARAVEL_HORIZON_INSTALL_ZIP_ARCHIVE}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_SOCKETS=${LARAVEL_HORIZON_INSTALL_SOCKETS}
        - INSTALL_YAML=${LARAVEL_HORIZON_INSTALL_YAML}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_PHPREDIS=${LARAVEL_HORIZON_INSTALL_PHPREDIS}
        - INSTALL_MONGO=${LARAVEL_HORIZON_INSTALL_MONGO}
        - INSTALL_FFMPEG=${LARAVEL_HORIZON_INSTALL_FFMPEG}
        - PUID=${LARAVEL_HORIZON_PUID}
        - PGID=${LARAVEL_HORIZON_PGID}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${PATH_CONFIGS}/laravel-horizon/supervisord.d:/etc/supervisord.d
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    depends_on:
      - php-fpm
    networks:
      - backend


### Laravel Echo Server #######################################
  echo-server:
    container_name: ${APP_NAME}-echo-server
    build:
      context: ${PATH_DOCKER}/laravel-echo-server
      dockerfile: Dockerfile
    volumes:
      - ${PATH_CONFIGS}/laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT}:6001"
    depends_on:
      - php-fpm
    links:
      - redis
    networks:
      - frontend
      - backend

### Mailhog ################################################
  mailhog:
    container_name: ${APP_NAME}-mailhog
    build:
      context: ${PATH_DOCKER}/mailhog
      dockerfile: Dockerfile
    ports:
      - "${MAILHOG_SMTP_PORT}:1025"
      - "${MAILHOG_HTTP_PORT}:8025"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
